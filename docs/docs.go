// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/laundry/initrequest": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Returns the problem codes and pending service reqeust status for a laundry machine.",
                "operationId": "InitRequest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "machine service tag id",
                        "name": "machineid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MachineRequestDetail"
                        }
                    }
                }
            }
        },
        "/laundry/requestservice": {
            "post": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "RequestService",
                "parameters": [
                    {
                        "description": "body json",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ServiceSubmission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ServiceRequestResult"
                        }
                    }
                }
            }
        },
        "/laundry/roomdetail": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Returns the list of machines and the number of washers and dryers available in a laundry room",
                "operationId": "Room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RoomDetail"
                        }
                    }
                }
            }
        },
        "/laundry/rooms": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get list of all campus laundry rooms",
                "operationId": "Rooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Organization"
                        }
                    }
                }
            }
        },
        "/person/contactinfo": {
            "get": {
                "security": [
                    {
                        "RokwireAuth ExternalAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Returns the name, permanent and mailing addresses, phone number and emergency contact information for a person",
                "operationId": "ConatctInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Person"
                        }
                    }
                }
            }
        },
        "/token": {
            "post": {
                "security": [
                    {
                        "RokwireAuth UserAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "Name",
                "parameters": [
                    {
                        "description": "body json",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sampleRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/version": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the service version.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "Version",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/wayfinding/building": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get the requested building with all of its available entrances filterd by the ADA only flag",
                "operationId": "Building",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Building identifier",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "ADA entrances filter",
                        "name": "adaOnly",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Building"
                        }
                    }
                }
            }
        },
        "/wayfinding/buildings": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get a list of all buildings with a list of active entrances",
                "operationId": "BuildingList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Building"
                            }
                        }
                    }
                }
            }
        },
        "/wayfinding/entrance": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Returns the entrance of the specified building that is closest to the user",
                "operationId": "Entrance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Building identifier",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "ADA entrances filter",
                        "name": "adaOnly",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "latitude coordinate of the user",
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "longitude coordinate of the user",
                        "name": "long",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Entrance"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rest.errorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "county": {
                    "type": "string"
                },
                "phone": {
                    "$ref": "#/definitions/model.PhoneNumber"
                },
                "stateAbbr": {
                    "type": "string"
                },
                "stateName": {
                    "type": "string"
                },
                "street1": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "model.Appliance": {
            "type": "object",
            "properties": {
                "applianceType": {
                    "type": "string"
                },
                "averageCycleTime": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timeRemaining": {
                    "type": "integer"
                }
            }
        },
        "model.Building": {
            "type": "object",
            "properties": {
                "address1": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "entrances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Entrance"
                    }
                },
                "fullAddress": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageURL": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "mailCode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "model.CodeDescType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.EmergencyContact": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/model.Address"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "relationShip": {
                    "$ref": "#/definitions/model.CodeDescType"
                }
            }
        },
        "model.Entrance": {
            "type": "object",
            "properties": {
                "adacompliant": {
                    "type": "boolean"
                },
                "available": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "imageURL": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.LaundryDetails": {
            "type": "object",
            "properties": {
                "floor": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "model.LaundryRoom": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "location": {
                    "$ref": "#/definitions/model.LaundryDetails"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.MachineRequestDetail": {
            "type": "object",
            "properties": {
                "machineID": {
                    "type": "string"
                },
                "machineType": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "openIssue": {
                    "type": "boolean"
                },
                "problemCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.Organization": {
            "type": "object",
            "properties": {
                "laundryRooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LaundryRoom"
                    }
                },
                "schoolName": {
                    "type": "string"
                }
            }
        },
        "model.Person": {
            "type": "object",
            "properties": {
                "emergencycontacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmergencyContact"
                    }
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "mailingAddress": {
                    "$ref": "#/definitions/model.Address"
                },
                "permanentAddress": {
                    "$ref": "#/definitions/model.Address"
                },
                "preferred": {
                    "type": "string"
                },
                "uin": {
                    "type": "string"
                }
            }
        },
        "model.PhoneNumber": {
            "type": "object",
            "properties": {
                "areaCode": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "model.RoomDetail": {
            "type": "object",
            "properties": {
                "appliances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Appliance"
                    }
                },
                "campusName": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/model.LaundryDetails"
                },
                "numDryers": {
                    "type": "integer"
                },
                "numWashers": {
                    "type": "integer"
                },
                "roomName": {
                    "type": "string"
                }
            }
        },
        "model.ServiceRequestResult": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "requestNumber": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.ServiceSubmission": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "machineid": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "problemcode": {
                    "type": "string"
                }
            }
        },
        "rest.errorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "sampleRecord": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AdminUserAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header (add admin id token with Bearer prefix to the Authorization value)"
        },
        "InternalAuth": {
            "type": "apiKey",
            "name": "INTERNAL-API-KEY",
            "in": "header"
        },
        "RokwireAuth": {
            "type": "apiKey",
            "name": "ROKWIRE-API-KEY",
            "in": "header"
        },
        "UserAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header (add client id token with Bearer prefix to the Authorization value)"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "localhost",
	BasePath:         "/gateway/api",
	Schemes:          []string{"https"},
	Title:            "Rokwire Gatewauy Building Block API",
	Description:      "Rokwire Rokwire Building Block API Documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
