basePath: /gateway/api
definitions:
  model.Address:
    properties:
      city:
        type: string
      county:
        type: string
      phone:
        $ref: '#/definitions/model.PhoneNumber'
      stateAbbr:
        type: string
      stateName:
        type: string
      street1:
        type: string
      type:
        type: string
      zipCode:
        type: string
    type: object
  model.Appliance:
    properties:
      applianceType:
        type: string
      averageCycleTime:
        type: integer
      id:
        type: string
      label:
        type: string
      status:
        type: string
      timeRemaining:
        type: integer
    type: object
  model.Building:
    properties:
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      entrances:
        items:
          $ref: '#/definitions/model.Entrance'
        type: array
      fullAddress:
        type: string
      id:
        type: string
      imageURL:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      mailCode:
        type: string
      name:
        type: string
      number:
        type: string
      state:
        type: string
      zipCode:
        type: string
    type: object
  model.CodeDescType:
    properties:
      code:
        type: string
      name:
        type: string
    type: object
  model.EmergencyContact:
    properties:
      address:
        $ref: '#/definitions/model.Address'
      firstName:
        type: string
      lastName:
        type: string
      priority:
        type: string
      relationShip:
        $ref: '#/definitions/model.CodeDescType'
    type: object
  model.Entrance:
    properties:
      adacompliant:
        type: boolean
      available:
        type: boolean
      id:
        type: string
      imageURL:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
    type: object
  model.LaundryDetails:
    properties:
      floor:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
    type: object
  model.LaundryRoom:
    properties:
      id:
        type: integer
      location:
        $ref: '#/definitions/model.LaundryDetails'
      name:
        type: string
      status:
        type: string
    type: object
  model.MachineRequestDetail:
    properties:
      machineID:
        type: string
      machineType:
        type: string
      message:
        type: string
      openIssue:
        type: boolean
      problemCodes:
        items:
          type: string
        type: array
    type: object
  model.Organization:
    properties:
      laundryRooms:
        items:
          $ref: '#/definitions/model.LaundryRoom'
        type: array
      schoolName:
        type: string
    type: object
  model.Person:
    properties:
      emergencycontacts:
        items:
          $ref: '#/definitions/model.EmergencyContact'
        type: array
      firstName:
        type: string
      lastName:
        type: string
      mailingAddress:
        $ref: '#/definitions/model.Address'
      permanentAddress:
        $ref: '#/definitions/model.Address'
      preferred:
        type: string
      uin:
        type: string
    type: object
  model.PhoneNumber:
    properties:
      areaCode:
        type: string
      number:
        type: string
    type: object
  model.RoomDetail:
    properties:
      appliances:
        items:
          $ref: '#/definitions/model.Appliance'
        type: array
      campusName:
        type: string
      location:
        $ref: '#/definitions/model.LaundryDetails'
      numDryers:
        type: integer
      numWashers:
        type: integer
      roomName:
        type: string
    type: object
  model.ServiceRequestResult:
    properties:
      message:
        type: string
      requestNumber:
        type: string
      status:
        type: string
    type: object
  model.ServiceSubmission:
    properties:
      comments:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      machineid:
        type: string
      phone:
        type: string
      problemcode:
        type: string
    type: object
  rest.errorMessage:
    properties:
      message:
        type: string
    type: object
  sampleRecord:
    properties:
      name:
        type: string
    type: object
host: localhost
info:
  contact: {}
  description: Rokwire Rokwire Building Block API Documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Rokwire Gatewauy Building Block API
  version: 0.1.0
paths:
  /laundry/initrequest:
    get:
      consumes:
      - application/json
      operationId: InitRequest
      parameters:
      - description: machine service tag id
        in: query
        name: machineid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MachineRequestDetail'
      security:
      - RokwireAuth: []
      summary: Returns the problem codes and pending service reqeust status for a
        laundry machine.
      tags:
      - Client
  /laundry/requestservice:
    post:
      consumes:
      - application/json
      operationId: RequestService
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ServiceSubmission'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ServiceRequestResult'
      security:
      - RokwireAuth: []
      tags:
      - Client
  /laundry/roomdetail:
    get:
      consumes:
      - application/json
      operationId: Room
      parameters:
      - description: Room id
        in: query
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoomDetail'
      security:
      - RokwireAuth: []
      summary: Returns the list of machines and the number of washers and dryers available
        in a laundry room
      tags:
      - Client
  /laundry/rooms:
    get:
      consumes:
      - application/json
      operationId: Rooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Organization'
      security:
      - RokwireAuth: []
      summary: Get list of all campus laundry rooms
      tags:
      - Client
  /person/contactinfo:
    get:
      consumes:
      - application/json
      operationId: ConatctInfo
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Person'
      security:
      - RokwireAuth ExternalAuth: []
      summary: Returns the name, permanent and mailing addresses, phone number and
        emergency contact information for a person
      tags:
      - Client
  /token:
    post:
      consumes:
      - application/json
      operationId: Name
      parameters:
      - description: body json
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sampleRecord'
      responses:
        "200":
          description: ""
      security:
      - RokwireAuth UserAuth: []
      tags:
      - Client
  /version:
    get:
      description: Gives the service version.
      operationId: Version
      produces:
      - text/plain
      responses:
        "200":
          description: ""
      security:
      - RokwireAuth: []
      tags:
      - Client
  /wayfinding/building:
    get:
      consumes:
      - application/json
      operationId: Building
      parameters:
      - description: Building identifier
        in: query
        name: id
        required: true
        type: string
      - description: ADA entrances filter
        in: query
        name: adaOnly
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Building'
      security:
      - RokwireAuth: []
      summary: Get the requested building with all of its available entrances filterd
        by the ADA only flag
      tags:
      - Client
  /wayfinding/buildings:
    get:
      consumes:
      - application/json
      operationId: BuildingList
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Building'
            type: array
      security:
      - RokwireAuth: []
      summary: Get a list of all buildings with a list of active entrances
      tags:
      - Client
  /wayfinding/entrance:
    get:
      consumes:
      - application/json
      operationId: Entrance
      parameters:
      - description: Building identifier
        in: query
        name: id
        required: true
        type: string
      - description: ADA entrances filter
        in: query
        name: adaOnly
        type: boolean
      - description: latitude coordinate of the user
        in: query
        name: lat
        required: true
        type: number
      - description: longitude coordinate of the user
        in: query
        name: long
        required: true
        type: number
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Entrance'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.errorMessage'
      security:
      - RokwireAuth: []
      summary: Returns the entrance of the specified building that is closest to the
        user
      tags:
      - Client
schemes:
- https
securityDefinitions:
  AdminUserAuth:
    in: header (add admin id token with Bearer prefix to the Authorization value)
    name: Authorization
    type: apiKey
  InternalAuth:
    in: header
    name: INTERNAL-API-KEY
    type: apiKey
  RokwireAuth:
    in: header
    name: ROKWIRE-API-KEY
    type: apiKey
  UserAuth:
    in: header (add client id token with Bearer prefix to the Authorization value)
    name: Authorization
    type: apiKey
swagger: "2.0"
